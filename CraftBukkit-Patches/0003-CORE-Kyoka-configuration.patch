From 9e15447ff33142838789532d59ec5afebd6dd167 Mon Sep 17 00:00:00 2001
From: Jamie Shaw <lk@lkay.org>
Date: Mon, 30 Jun 2014 14:41:51 +1000
Subject: [PATCH] CORE: Kyoka configuration


diff --git a/src/main/java/nl/hiraku/kyoka/KyokaConfig.java b/src/main/java/nl/hiraku/kyoka/KyokaConfig.java
new file mode 100644
index 0000000..f5a48c7
--- /dev/null
+++ b/src/main/java/nl/hiraku/kyoka/KyokaConfig.java
@@ -0,0 +1,37 @@
+package nl.hiraku.kyoka;
+
+import org.bukkit.Bukkit;
+import org.bukkit.configuration.file.YamlConfiguration;
+
+import java.io.File;
+import java.io.IOException;
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
+import java.lang.reflect.Modifier;
+import java.util.logging.Level;
+
+public class KyokaConfig {
+    private static File configFile = new File("kyoka.yml");
+    private static YamlConfiguration config;
+
+    public static void init() {
+        config = YamlConfiguration.loadConfiguration(configFile);
+        for (Method method : KyokaConfig.class.getDeclaredMethods()) {
+            if (Modifier.isPrivate(method.getModifiers()) && method.getParameterTypes().length == 0 && method.getReturnType().equals(Void.TYPE)) {
+                method.setAccessible(true);
+                try {
+                    method.invoke(null);
+                } catch (IllegalAccessException | InvocationTargetException ex) {
+                    Bukkit.getLogger().log(Level.SEVERE, "[Kyoka] " + ex.getMessage());
+                }
+            }
+        }
+
+        try {
+            config.save(configFile);
+        } catch (IOException ex) {
+            Bukkit.getLogger().log(Level.SEVERE, "[Kyoka] Unable to save default configuration file!");
+        }
+
+    }
+}
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index a666131..03870c1 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -23,6 +23,7 @@ import java.util.regex.Pattern;
 
 import javax.imageio.ImageIO;
 
+import nl.hiraku.kyoka.KyokaConfig;
 import net.minecraft.server.ChunkCoordinates;
 import net.minecraft.server.CommandAchievement;
 import net.minecraft.server.CommandBan;
@@ -277,6 +278,9 @@ public final class CraftServer implements Server {
             configuration.set("aliases", "now-in-commands.yml");
         }
         saveConfig();
+
+        KyokaConfig.init();
+
         if (getCommandsConfigFile().isFile()) {
             legacyAlias = null;
         }
-- 
1.9.1

